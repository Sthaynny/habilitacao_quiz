// Mocks generated by Mockito 5.3.0 from annotations
// in habilitacao_quiz/test/features/home/domain/usecases/direcao_defensiva_quiz_usercase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:habilitacao_quiz/app/shared/data/repositories/quiz_repository.dart'
    as _i3;
import 'package:habilitacao_quiz/app/shared/domain/entities/quiz_entity.dart'
    as _i6;
import 'package:habilitacao_quiz/core/exceptions/erro.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [QuizRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuizRepository extends _i1.Mock implements _i3.QuizRepository {
  MockQuizRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.ExceptionErro, _i6.QuizEntity>> getQuiz(
          String? nome) =>
      (super.noSuchMethod(Invocation.method(#getQuiz, [nome]),
              returnValue: _i4
                  .Future<_i2.Either<_i5.ExceptionErro, _i6.QuizEntity>>.value(
                  _FakeEither_0<_i5.ExceptionErro, _i6.QuizEntity>(
                      this, Invocation.method(#getQuiz, [nome]))))
          as _i4.Future<_i2.Either<_i5.ExceptionErro, _i6.QuizEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.ExceptionErro, _i6.QuizEntity>> getSimulado() =>
      (super.noSuchMethod(Invocation.method(#getSimulado, []),
              returnValue: _i4
                  .Future<_i2.Either<_i5.ExceptionErro, _i6.QuizEntity>>.value(
                  _FakeEither_0<_i5.ExceptionErro, _i6.QuizEntity>(
                      this, Invocation.method(#getSimulado, []))))
          as _i4.Future<_i2.Either<_i5.ExceptionErro, _i6.QuizEntity>>);
}
